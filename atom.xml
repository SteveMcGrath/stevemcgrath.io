<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>/home/steve</title>
  <subtitle>Ramblings of a Security Nerd</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://stevemcgrath.io/"/>
  <updated>2016-08-29T20:25:36.000Z</updated>
  <id>http://stevemcgrath.io/</id>
  
  <author>
    <name>Steve McGrath</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Setting up PocketCHIP</title>
    <link href="http://stevemcgrath.io/2016/07/16/Setting-up-PocketCHIP/"/>
    <id>http://stevemcgrath.io/2016/07/16/Setting-up-PocketCHIP/</id>
    <published>2016-07-16T22:58:00.000Z</published>
    <updated>2016-08-29T20:25:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>So I got a couple of these fantastic little embedded systems from Next Thing, and started to try to set one of them up how I would like to see it setup.  Basically I was looking for a web browser, SSH installed, and a few aliases to make things easy to work with.</p>
<blockquote>
<p><strong><em>NOTE:</em></strong> All of the operations below assume a basic understanding of terminal commands!</p>
</blockquote>
<h3 id="Updating-the-PocketCHIP-and-installing-the-software"><a href="#Updating-the-PocketCHIP-and-installing-the-software" class="headerlink" title="Updating the PocketCHIP and installing the software"></a>Updating the PocketCHIP and installing the software</h3><p>To start off, the PocketCHIP OS is slightly out of date as it’s currently being flashed, so the first thing we need to do is update the OS to current:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure>
<p>Now lets go ahead and install the needed packages (Note: “\” and lines are used here for page cleanliness).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install openssh-client \</div><div class="line">                     openssh-server \</div><div class="line">                     irssi \</div><div class="line">                     dnsutils \</div><div class="line">                     moc \</div><div class="line">                     dwb</div></pre></td></tr></table></figure>
<p>Next we will disable SSH from starting automatically:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl disable ssh</div></pre></td></tr></table></figure>
<p>So now technically all of the software was installed (that was easy), but now we want to make the needed configuration changes to make everything behave how we expect it to.  I’d recommend actually doing everything from hear-on out through SSH, as you’ll have the benefit of a full-size keyboard.</p>
<h3 id="Setting-up-the-Shell-Environment"><a href="#Setting-up-the-Shell-Environment" class="headerlink" title="Setting up the Shell Environment"></a>Setting up the Shell Environment</h3><p>with the small keyboard, it makes a lot of sense to build-in some aliases to commonly-used commands.  This will save a lot of keystrokes overall and can only improve the overall experience.  I prefer to shim into the user profile in a manner that means that I’m not constantly editing the default user profiles, as there is plenty in there that you simply don’t want to touch.  To do this, we will do the following:</p>
<p><strong>Step 1:</strong> create the profile scripts directory.  This directory will house our custom additions to the shell environment and allows us to more easily extend the shell in a safer manner.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/.profile_scripts</div></pre></td></tr></table></figure></p>
<p><strong>Step 2:</strong> using either <code>vi</code> or <code>nano</code>, we will need to append the following to the end of the <code>~/.bashrc</code> file:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># This is a shim to allow for multiple profile script to exist in the</div><div class="line"># user home.  All of the shell scripts in ~/.profile_scripts will be</div><div class="line"># loaded into the user environment.                                    for SCRIPT_NAME in $(ls $HOME/.profile_scripts/*.sh);do</div><div class="line">    source $SCRIPT_NAME                                                done                                                                     unset SCRIPT_NAME</div></pre></td></tr></table></figure>
<p><strong>Step 3:</strong> Now that the user’s profile is set to load anything with a .sh extension into the profile, lets create an aliases file and input the aliases that we want to use.  Using either <code>vi</code> or <code>nano</code>, create a new file at <code>~/.profile_scripts/aliases.sh</code> and input the following into the file (and feel free to modify as you see fit):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"># Enable the SSH Daemon</div><div class="line">alias sshon=&quot;sudo systemctl start ssh&quot;</div><div class="line"></div><div class="line"># Disable the SSH Daemon</div><div class="line">alias sshoff=&quot;sudo systemctl stop ssh&quot;</div><div class="line"></div><div class="line"># Get all associated IP Addresses</div><div class="line">alias getip=\&quot;ip addr | awk &apos;/inet/ &#123;print $2&#125;&apos;\&quot;&quot;</div><div class="line"></div><div class="line"># List all files in long format</div><div class="line">alias ll=&quot;ls -al&quot;</div><div class="line"></div><div class="line"># A shortcut to grep the running processes</div><div class="line">alias pgr=&quot;ps -ef | grep&quot;</div><div class="line"></div><div class="line"># Install a package</div><div class="line">alias sagi=&quot;sudo apt-get install&quot;</div><div class="line"></div><div class="line"># Update the repository cache</div><div class="line">alias sagu=&quot;sudo apt-get update&quot;</div><div class="line"></div><div class="line"># Upgrade the current packages installed</div><div class="line">alias sagU=&quot;sudo apt-get upgrade&quot;</div><div class="line"></div><div class="line"># Search for a package</div><div class="line">alias sags=&quot;apt-cache search&quot;</div></pre></td></tr></table></figure>
<p><strong>Step 4</strong>: Now to get these changes to apply to the current shell, you simply need to <code>source ~/.bashrc</code> and it will reload the shell environment based on these new settings.</p>
<h3 id="Adding-the-Browser-to-to-the-Home-screen"><a href="#Adding-the-Browser-to-to-the-Home-screen" class="headerlink" title="Adding the Browser to to the Home screen"></a>Adding the Browser to to the Home screen</h3><p>Next we will want to add the browser to the home screen so that it is easily accessible for general use.  As the PocketCHIP home screen only supports 6 icons, we will need to replace the help documentation with the browser.  To do so we will need to modify the definitions file for pocket-home to point to the browser.  Using <code>vi</code> or <code>nano</code>, open <code>/usr/share/pocket-home/config.json</code> and look for the help icon and change this definition to look like below instead:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> &#123;</div><div class="line">  &quot;name&quot;: &quot;Web Browser&quot;,</div><div class="line">  &quot;icon&quot;: &quot;appIcons/webbrowser.png&quot;,</div><div class="line">  &quot;shell&quot;: &quot;BROWSER_EXEC&quot;</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<p>Once you have saved the change, we will need to bounce the pocket-home GUI by typing <code>sudo skill pocket-home</code>.  If you have made an error in the configuration, you will not see the GUI come back up and just see the PocketCHIP logo on the screen (it may take a minute or so for the GUI to show up).  If this is the case, don’t fret, just re-edit the file and and bounce the application again.  This is why we are making these changes over SSH, eight ;).</p>
<h3 id="Configuring-the-Browser"><a href="#Configuring-the-Browser" class="headerlink" title="Configuring the Browser"></a>Configuring the Browser</h3><p>DWB is a really decent webkit-based browser (same engine thats in chrome), however we need to make some minor configuration changes to the browser to support the low resolution of the PocketCHIP and to mimick a mobile device so that we load less resource intensive pages.  To do this we much first start DWB from the PocketCHIP (using the <code>dwb</code> command) so that it will write it’s initial configuration file and then <code>CNTRL+X</code> to exit it.  Once thats done, we will open the configuration file from the SSH console and make the appropriate changes.  For brevity, I have listed the relevant changes that you will need to make in the file, simply look for each line below and modify as appropriate:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">default-height=272</div><div class="line">default-width=420</div><div class="line">user-agent=Mozilla/5.0 (Linux; U; Android 4.0.3; en-us) AppleWebKit/999+ (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30</div></pre></td></tr></table></figure>
<p>As DWB is keyboard-heavy for navigation, you may want to look at the <a href="http://portix.bitbucket.org/dwb/resources/manpage.html57" target="_blank" rel="external">DWB Manual</a> in order to get a good understanding of what to do.  I personally fine the simple cheat-sheet below enough to get by for most uses:</p>
<ul>
<li>CNTRL+Q - Quit</li>
<li>o - Enter URL (Open)</li>
<li>h - Go back</li>
<li>l - Go forward</li>
<li>Scrolling = Arrow keys</li>
</ul>
<h3 id="Finishing-up…"><a href="#Finishing-up…" class="headerlink" title="Finishing up…"></a>Finishing up…</h3><p>Now with these changes in place, go ahead and attempt to launch the browser from the home screen.  If all is well, the browser should come up and everything should look good.  A good test is to goto slashdot.org or google.com and see if the page is rendering as we should expect (no scrolling, mobile site, etc).  If everything looks good, then your done!</p>
<h3 id="Errata"><a href="#Errata" class="headerlink" title="Errata"></a>Errata</h3><p>I have also built a script to automate all of the actions mentioned in the above post, please see the <a href="https://bbs.nextthing.co/t/pocketchip-browser-installer-script/4832" target="_blank" rel="external">PocketCHIP Browser Installer Script</a> post for information on how to use it.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;So I got a couple of these fantastic little embedded systems from Next Thing, and started to try to set one of them up how I would like t
    
    </summary>
    
    
      <category term="linux" scheme="http://stevemcgrath.io/tags/linux/"/>
    
      <category term="chip" scheme="http://stevemcgrath.io/tags/chip/"/>
    
      <category term="pocketchip" scheme="http://stevemcgrath.io/tags/pocketchip/"/>
    
      <category term="howto" scheme="http://stevemcgrath.io/tags/howto/"/>
    
  </entry>
  
  <entry>
    <title>Dofler at CircleCityCon3</title>
    <link href="http://stevemcgrath.io/2016/06/14/Dofler-at-CircleCityCon3/"/>
    <id>http://stevemcgrath.io/2016/06/14/Dofler-at-CircleCityCon3/</id>
    <published>2016-06-14T15:02:00.000Z</published>
    <updated>2016-08-29T20:15:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Aside from a few hiccups that delayed getting Dofler installed and fully functional until mid-day Saturday, Dofler was a fantastical success at <a href="http://circlecitycon.com" target="_blank" rel="external">CircleCityCon</a>!  We discovered that the new codebase Dofler sits on was catching more entertainment than ever, including some MJPEG-based webcams:</p>
<p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">GREAT JOB to whomever is checking their MJPEG home security system via HTTP on the con network. <a href="https://twitter.com/hashtag/dofler?src=hash" target="_blank" rel="external">#dofler</a> <a href="https://t.co/MiD6jSR8lz" target="_blank" rel="external">pic.twitter.com/MiD6jSR8lz</a></p>&mdash; Circle City Con (@CircleCityCon) <a href="https://twitter.com/CircleCityCon/status/741754925256937472" target="_blank" rel="external">June 11, 2016</a></blockquote></p>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>In the evening, Dofler made it’s way to the party and fun was had at a much larger scale ;).</p>
<p>Thanks to everyone who connected up and was purposefully trolling the board for everyone else’s amusement!  See ya’ll at BSidesLV!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Aside from a few hiccups that delayed getting Dofler installed and fully functional until mid-day Saturday, Dofler was a fantastical succ
    
    </summary>
    
    
      <category term="dofler" scheme="http://stevemcgrath.io/tags/dofler/"/>
    
      <category term="conferences" scheme="http://stevemcgrath.io/tags/conferences/"/>
    
  </entry>
  
  <entry>
    <title>Initial Deployment Files Release</title>
    <link href="http://stevemcgrath.io/2016/01/13/Initial-Deployment-Files-Release/"/>
    <id>http://stevemcgrath.io/2016/01/13/Initial-Deployment-Files-Release/</id>
    <published>2016-01-13T16:02:00.000Z</published>
    <updated>2016-08-29T20:13:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>I have started working through all of the various fabric files I have and started centralizing them and cleaning them up for general consumption.  These fabric scripts cover a variety of tasks from deployment and maintenance of various products to deploying some of my code.  I will be updating the repository as needs arise, and as always am welcome to any input.</p>
<p>Using my fabric files is actually pretty simple, however you need to <a href="http://www.fabfile.org/installing.html" target="_blank" rel="external">have fabric installed on your workstation</a> before anything will work.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/SteveMcGrath/deploy.git</div><div class="line">cd deploy</div></pre></td></tr></table></figure>
<p>Now as long as your in the deploy directory, the fab command should work for deployment and management.  To get a list of the available commands, run <code>fab -l</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">(fabric)tnsmbp:deployment smcgrath$ fab -l</div><div class="line">Available commands:</div><div class="line"></div><div class="line">    nessus.install      Installs/Updates Nessus.</div><div class="line">    nessus.plugin_push  Pushes plugin tarball to the remote scanner.</div><div class="line">    nessus.prep         Prepares a vanilla system for use as a Nessus scanner.</div><div class="line">    prep.prep           Generic preparation script for CentOS/RHEL boxen.</div><div class="line">    prep.rmate          Installs the rmate shell script into /usr/local/bin</div><div class="line">    prep.sshkeys        Pushes the management keys to remote server.</div><div class="line">    prep.template       Performs the needed actions to make the host templatable.</div><div class="line">    prep.update         Updates the OS to current</div><div class="line">    pvs.install         Installs/Updates PVS.</div><div class="line">    pvs.prep            Prepares a vanilla system for use as a PVS sensor.</div><div class="line">    sc.getfeed          Pulls the plugin feeds from SecurityCenter to the local box.</div><div class="line">(fabric)tnsmbp:deployment smcgrath$</div><div class="line">`</div></pre></td></tr></table></figure>
<p>Before we run anything, you will need to copy the <code>fabfile/config.py-dist</code> file to <code>fabfile/config.py</code> and make the appropriate changes in this file.  Once thats done, it should be a simple matter of running the appropriate command against a host.  Note all of the output is whats being returned back from the remote system as the commands are being run, and while generally can be ignored if everything went as expected, this output can be useful when things go awry.    </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line">(fabric)tnsmbp:deployment smcgrath$ fab -H scanner1.home.cugnet.net nessus.install</div><div class="line">[scanner1.home.cugnet.net] Executing task &apos;nessus.install&apos;</div><div class="line">[scanner1.home.cugnet.net] run: rpm -qa Nessus</div><div class="line">[scanner1.home.cugnet.net] out: Nessus-6.5.2-es6.x86_64</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">Nessus-6.5.4-es6.x86_64.rpm</div><div class="line">[scanner1.home.cugnet.net] put: /Users/smcgrath/Dropbox/Repositories/Projects/deployment/fabfile/../packages/Nessus-6.5.4-es6.x86_64.rpm -&gt; /tmp/Nessus.rpm</div><div class="line">[scanner1.home.cugnet.net] run: yum -y -q install /tmp/Nessus.rpm</div><div class="line">[scanner1.home.cugnet.net] out: Shutting down Nessus services: [  OK  ]</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">[scanner1.home.cugnet.net] out: Unpacking Nessus Core Components...</div><div class="line">[scanner1.home.cugnet.net] out: nessusd (Nessus) 6.5.4 [build M20044] for Linux</div><div class="line">[scanner1.home.cugnet.net] out: Copyright (C) 1998 - 2015 Tenable Network Security, Inc</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">[scanner1.home.cugnet.net] out: Processing the Nessus plugins...</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">[scanner1.home.cugnet.net] out: [##                                                ]</div><div class="line">[scanner1.home.cugnet.net] out: [###                                               ]</div><div class="line">[scanner1.home.cugnet.net] out: [####                                              ]</div><div class="line">[scanner1.home.cugnet.net] out: [#####                                             ]</div><div class="line">[scanner1.home.cugnet.net] out: [######                                            ]</div><div class="line">[scanner1.home.cugnet.net] out: [#######                                           ]</div><div class="line">[scanner1.home.cugnet.net] out: [########                                          ]</div><div class="line">[scanner1.home.cugnet.net] out: [#########                                         ]</div><div class="line">[scanner1.home.cugnet.net] out: [##########                                        ]</div><div class="line">[scanner1.home.cugnet.net] out: [###########                                       ]</div><div class="line">[scanner1.home.cugnet.net] out: [############                                      ]</div><div class="line">[scanner1.home.cugnet.net] out: [#############                                     ]</div><div class="line">[scanner1.home.cugnet.net] out: [##############                                    ]</div><div class="line">[scanner1.home.cugnet.net] out: [###############                                   ]</div><div class="line">[scanner1.home.cugnet.net] out: [################                                  ]</div><div class="line">[scanner1.home.cugnet.net] out: [#################                                 ]</div><div class="line">[scanner1.home.cugnet.net] out: [##################                                ]</div><div class="line">[scanner1.home.cugnet.net] out: [###################                               ]</div><div class="line">[scanner1.home.cugnet.net] out: [####################                              ]</div><div class="line">[scanner1.home.cugnet.net] out: [#####################                             ]</div><div class="line">[scanner1.home.cugnet.net] out: [######################                            ]</div><div class="line">[scanner1.home.cugnet.net] out: [#######################                           ]</div><div class="line">[scanner1.home.cugnet.net] out: [########################                          ]</div><div class="line">[scanner1.home.cugnet.net] out: [#########################                         ]</div><div class="line">[scanner1.home.cugnet.net] out: [##########################                        ]</div><div class="line">[scanner1.home.cugnet.net] out: [###########################                       ]</div><div class="line">[scanner1.home.cugnet.net] out: [############################                      ]</div><div class="line">[scanner1.home.cugnet.net] out: [#############################                     ]</div><div class="line">[scanner1.home.cugnet.net] out: [##############################                    ]</div><div class="line">[scanner1.home.cugnet.net] out: [###############################                   ]</div><div class="line">[scanner1.home.cugnet.net] out: [################################                  ]</div><div class="line">[scanner1.home.cugnet.net] out: [#################################                 ]</div><div class="line">[scanner1.home.cugnet.net] out: [##################################                ]</div><div class="line">[scanner1.home.cugnet.net] out: [###################################               ]</div><div class="line">[scanner1.home.cugnet.net] out: [####################################              ]</div><div class="line">[scanner1.home.cugnet.net] out: [#####################################             ]</div><div class="line">[scanner1.home.cugnet.net] out: [######################################            ]</div><div class="line">[scanner1.home.cugnet.net] out: [#######################################           ]</div><div class="line">[scanner1.home.cugnet.net] out: [########################################          ]</div><div class="line">[scanner1.home.cugnet.net] out: [#########################################         ]</div><div class="line">[scanner1.home.cugnet.net] out: [##########################################        ]</div><div class="line">[scanner1.home.cugnet.net] out: [###########################################       ]</div><div class="line">[scanner1.home.cugnet.net] out: [############################################      ]</div><div class="line">[scanner1.home.cugnet.net] out: [#############################################     ]</div><div class="line">[scanner1.home.cugnet.net] out: [##############################################    ]</div><div class="line">[scanner1.home.cugnet.net] out: [###############################################   ]</div><div class="line">[scanner1.home.cugnet.net] out: [################################################  ]</div><div class="line">[scanner1.home.cugnet.net] out: [################################################  ]</div><div class="line">[scanner1.home.cugnet.net] out: [################################################  ]</div><div class="line">[scanner1.home.cugnet.net] out: [##################################################]</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">[scanner1.home.cugnet.net] out: All plugins loaded (472sec)</div><div class="line">[scanner1.home.cugnet.net] out:  - You can start Nessus by typing /sbin/service nessusd start</div><div class="line">[scanner1.home.cugnet.net] out:  - Then go to https://scanner1.home.cugnet.net:8834/ to configure your scanner</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line"></div><div class="line">[scanner1.home.cugnet.net] run: service nessusd stop</div><div class="line">[scanner1.home.cugnet.net] out: Shutting down Nessus servic[FAILED]</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line"></div><div class="line">[scanner1.home.cugnet.net] run: rm -f /tmp/Nessus.rpm</div><div class="line">[scanner1.home.cugnet.net] put: /Users/smcgrath/Dropbox/Repositories/Projects/deployment/fabfile/../tmp/all-2.0.tar.gz -&gt; /tmp/plugins.tar.gz</div><div class="line">[scanner1.home.cugnet.net] run: /opt/nessus/sbin/nessuscli update /tmp/plugins.tar.gz</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">[scanner1.home.cugnet.net] out:  * Update successful.  The changes will be automatically processed by Nessus.</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line"></div><div class="line">[scanner1.home.cugnet.net] run: rm -f /tmp/plugins.tar.gz</div><div class="line">[scanner1.home.cugnet.net] run: service nessusd start</div><div class="line">[scanner1.home.cugnet.net] out: Starting Nessus services:  [  OK  ]</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line">[scanner1.home.cugnet.net] out:</div><div class="line"></div><div class="line"></div><div class="line">Done.</div><div class="line">Disconnecting from scanner1.home.cugnet.net... done.</div><div class="line">(fabric)tnsmbp:deployment smcgrath$</div></pre></td></tr></table></figure>
<p>You can even assign <em>roles</em>, or classes of systems if you want to work on multiple machines at once.  In general, there is a lot of power with fabric to build and maintain systems centrally without any agent installed on them (unlike Chef or Puppet) and has been my primary way to manage the hosts that I have.  I know the trade-offs between agent-based solutions and agent-less ones like fabric and ansible, and I just seem to prefer agent-less.</p>
<p>If you would like to see more of what fabric can do, I’d highly recommend heading to the <a href="http://fabfile.org" target="_blank" rel="external">Fabfile.org</a> website. </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I have started working through all of the various fabric files I have and started centralizing them and cleaning them up for general cons
    
    </summary>
    
    
      <category term="python" scheme="http://stevemcgrath.io/tags/python/"/>
    
      <category term="fabric" scheme="http://stevemcgrath.io/tags/fabric/"/>
    
      <category term="deployment" scheme="http://stevemcgrath.io/tags/deployment/"/>
    
  </entry>
  
  <entry>
    <title>CUGNet VPS Services Closing</title>
    <link href="http://stevemcgrath.io/2015/07/15/CUGNet-VPS-Services-Closing/"/>
    <id>http://stevemcgrath.io/2015/07/15/CUGNet-VPS-Services-Closing/</id>
    <published>2015-07-15T17:12:00.000Z</published>
    <updated>2016-08-29T20:12:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>After running CUGNet for a dozen or so years and having yet to break even, last week I made the hard decision to close down CUGNet’s VPS services.  It was a hard choice to make, as its something that I have done for many years, however with the propensity of cloud services and VPS providers out there, What I can offer is simply not competitive and the I need to start cutting down on the number of side projects that I have been running in order to keep my own sanity.  I will be keeping the VPS services up and running at least past DefCon, however after that point the servers will eventually be shut down and the hardware de-racked.  It’s been a long run for CUGNet, however as with anything else, all good things must eventually come to an end.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;After running CUGNet for a dozen or so years and having yet to break even, last week I made the hard decision to close down CUGNet’s VPS 
    
    </summary>
    
    
      <category term="cugnet" scheme="http://stevemcgrath.io/tags/cugnet/"/>
    
      <category term="vps" scheme="http://stevemcgrath.io/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>pySecurityCenter 2.1 Release</title>
    <link href="http://stevemcgrath.io/2015/07/15/pySecurityCenter-2-1-Release/"/>
    <id>http://stevemcgrath.io/2015/07/15/pySecurityCenter-2-1-Release/</id>
    <published>2015-07-15T05:21:00.000Z</published>
    <updated>2016-08-29T20:10:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>I’m proud to announce the general availability for pySecurityCenter version 2.1.x accessible from PyPI immediately.  pySC 2.1 supports connectivity to SecurityCenter 5, which leverages a completely new RESTful API.  Because of this, the pySC SecurityCenter 5 support will be an evolving process.  Whats implemented today will not be changing, however many of the convenience functions that pySecurityCenter has for SecurityCenter 4.x have not been coded into the SC5 module, as enumeration for the API is still active.  Further I don’t want to paint myself into a corner with SC5 support, as I expect the API to evolve a bit over time, and don’t want pySC to need a lot of work to support multiple revisions of the SC5 API.</p>
<p>We shall see what happens over the long haul, however there is already a couple of examples on how to leverage the 5.x module in the examples section within the GutHub repository.</p>
<h3 id="To-upgrade"><a href="#To-upgrade" class="headerlink" title="To upgrade:"></a>To upgrade:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install -U pysecuritycenter</div></pre></td></tr></table></figure>
<p>or download the tagged version and install manually.</p>
<h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage:"></a>Usage:</h3><p>Using pySecurityCenter with SecurityCenter 5 isn’t all that different than using the SC4 classes.  Login is done independently now for a number of reasons, however.  To instantiate and login, you would do the following:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> securitycenter <span class="keyword">import</span> SecurityCenter5</div><div class="line">sc = SecurityCenter5(<span class="string">'HOSTNAME_GOES_HERE'</span>)</div><div class="line">sc.login(<span class="string">'USERNAME'</span>, <span class="string">'PASSWORD'</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I’m proud to announce the general availability for pySecurityCenter version 2.1.x accessible from PyPI immediately.  pySC 2.1 supports co
    
    </summary>
    
    
      <category term="python" scheme="http://stevemcgrath.io/tags/python/"/>
    
      <category term="securitycenter" scheme="http://stevemcgrath.io/tags/securitycenter/"/>
    
      <category term="tenable" scheme="http://stevemcgrath.io/tags/tenable/"/>
    
  </entry>
  
</feed>
